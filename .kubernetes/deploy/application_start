#!/bin/bash

SCRIPT_DIR=`dirname $0`
DISTRIBUTION_DIR=`dirname $SCRIPT_DIR`

export PATH=/usr/local/bin:$PATH

BLUE_PORT=`AWS_DEFAULT_REGION=us-west-2 aws elb describe-tags --load-balancer-name blu-octoblu-com | jq '.TagDescriptions[0].Tags[] | select(.Key == "blue") | .Value | tonumber'`
GREEN_PORT=`AWS_DEFAULT_REGION=us-west-2 aws elb describe-tags --load-balancer-name blu-octoblu-com | jq '.TagDescriptions[0].Tags[] | select(.Key == "green") | .Value | tonumber'`

OLD_PORT=`AWS_DEFAULT_REGION=us-west-2 aws elb describe-load-balancers --load-balancer-name blu-octoblu-com | jq '.LoadBalancerDescriptions[0].ListenerDescriptions[0].Listener.InstancePort'`

NEW_COLOR=blue
NEW_PORT=${BLUE_PORT}
if [ "${OLD_PORT}" == "${BLUE_PORT}" ]; then
  NEW_COLOR=green
  NEW_PORT=${GREEN_PORT}
fi

export BLUE_PORT GREEN_PORT OLD_PORT NEW_COLOR NEW_PORT

REPLACE_REGEX='s;(\\*)(\$([a-zA-Z_][a-zA-Z_0-9]*)|\$\{([a-zA-Z_][a-zA-Z_0-9]*)\})?;substr($1,0,int(length($1)/2)).($2&&length($1)%2?$2:$ENV{$3||$4});eg'
perl -pe $REPLACE_REGEX $SCRIPT_DIR/blu-web-blue-service.yaml.tmpl > $SCRIPT_DIR/blu-web-blue-service.yaml
perl -pe $REPLACE_REGEX $SCRIPT_DIR/blu-web-green-service.yaml.tmpl > $SCRIPT_DIR/blu-web-green-service.yaml

# Always create both services
kubectl create -f $SCRIPT_DIR/blu-web-green-service.yaml
kubectl create -f $SCRIPT_DIR/blu-web-blue-service.yaml

kubectl delete rc -lname=blu-web-${NEW_COLOR}
kubectl delete pods -lname=blu-web-${NEW_COLOR}
kubectl create -f $SCRIPT_DIR/blu-web-${NEW_COLOR}-controller.yaml


sleep 30

AWS_DEFAULT_REGION=us-west-2 aws elb delete-load-balancer-listeners --load-balancer-name blu-octoblu-com --load-balancer-ports 80
AWS_DEFAULT_REGION=us-west-2 aws elb delete-load-balancer-listeners --load-balancer-name blu-octoblu-com --load-balancer-ports 443
AWS_DEFAULT_REGION=us-west-2 aws elb create-load-balancer-listeners --load-balancer-name blu-octoblu-com --listeners Protocol=HTTP,LoadBalancerPort=80,InstanceProtocol=HTTP,InstancePort=${NEW_PORT}
AWS_DEFAULT_REGION=us-west-2 aws elb create-load-balancer-listeners --load-balancer-name blu-octoblu-com --listeners Protocol=HTTPS,LoadBalancerPort=443,InstanceProtocol=HTTP,InstancePort=${NEW_PORT},SSLCertificateId=arn:aws:iam::822069890720:server-certificate/startinter.octoblu.com

AWS_DEFAULT_REGION=us-west-2 aws elb configure-health-check --load-balancer-name blu-octoblu-com --health-check Target=HTTP:${NEW_PORT}/healthcheck,Interval=30,Timeout=5,UnhealthyThreshold=2,HealthyThreshold=2
